To define a variable that is a matrix of 2 rows and 3 colums where the first row is 1,2,3 and the second row is 4,5,6, you would name it (I named it lastVector)
and then enter the code and all of it would read as lastVector = [1,2,3;4,5,6]; because the ; seperates columns. For the cell array, I did the same thing but named it secondCellArray and used different brackets. The code looks like this secondCellArray = {'a','b','c';'d','e','f'};

The dimensions of columnVector would be 6x1, instead of 1x6 like newVector. Based on that, I do not think that another and columnVector are equivalent. The command that you would use to confirm this is isequal(anotherVector,columnVector); When you run this code, you get the ans of 0, which means false whereas 1 would mean true. 

Yes, the two variables are the same. I know this because the logical variable I got was 1, meaning that newVector and anotherVector must be the same. 1 means they are equal. 

oldWorkingDir = 'workingDir'

I do expect oldWorkingDir and workingDir to be the same value because when we first named workingDir = pwd, it means that pwd and workingDir are the same thing, just that now pwd is called workingDir, based on that when we called oldWorkingdir = workingDir, it measn that oldWorkingDir and workingDir are the same thing as well, essentially meaning that workingDir = pwd will still be the same value.When I looked at my workspace both oldWorkingDir and workingDir were the same.
